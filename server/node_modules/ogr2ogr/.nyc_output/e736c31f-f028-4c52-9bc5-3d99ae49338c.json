{"/Users/wavded/Projects/ogr2ogr/index_test.ts":{"path":"/Users/wavded/Projects/ogr2ogr/index_test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":57}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":26}},"5":{"start":{"line":8,"column":11},"end":{"line":8,"column":41}},"6":{"start":{"line":9,"column":10},"end":{"line":9,"column":34}},"7":{"start":{"line":10,"column":0},"end":{"line":133,"column":3}},"8":{"start":{"line":11,"column":16},"end":{"line":97,"column":5}},"9":{"start":{"line":98,"column":4},"end":{"line":132,"column":5}},"10":{"start":{"line":99,"column":8},"end":{"line":131,"column":9}},"11":{"start":{"line":100,"column":24},"end":{"line":100,"column":55}},"12":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"13":{"start":{"line":102,"column":16},"end":{"line":102,"column":53}},"14":{"start":{"line":104,"column":22},"end":{"line":108,"column":14}},"15":{"start":{"line":109,"column":12},"end":{"line":125,"column":13}},"16":{"start":{"line":110,"column":16},"end":{"line":110,"column":39}},"17":{"start":{"line":111,"column":16},"end":{"line":111,"column":25}},"18":{"start":{"line":113,"column":17},"end":{"line":125,"column":13}},"19":{"start":{"line":114,"column":16},"end":{"line":114,"column":81}},"20":{"start":{"line":117,"column":16},"end":{"line":117,"column":54}},"21":{"start":{"line":118,"column":25},"end":{"line":118,"column":65}},"22":{"start":{"line":119,"column":16},"end":{"line":124,"column":17}},"23":{"start":{"line":120,"column":20},"end":{"line":120,"column":64}},"24":{"start":{"line":123,"column":20},"end":{"line":123,"column":53}},"25":{"start":{"line":126,"column":12},"end":{"line":126,"column":29}},"26":{"start":{"line":129,"column":12},"end":{"line":129,"column":29}},"27":{"start":{"line":130,"column":12},"end":{"line":130,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":20},"end":{"line":10,"column":21}},"loc":{"start":{"line":10,"column":33},"end":{"line":133,"column":1}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":100,"column":24},"end":{"line":100,"column":55}},"type":"cond-expr","locations":[{"start":{"line":100,"column":33},"end":{"line":100,"column":39}},{"start":{"line":100,"column":42},"end":{"line":100,"column":55}}],"line":100},"4":{"loc":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},{"start":{"line":101,"column":12},"end":{"line":103,"column":13}}],"line":101},"5":{"loc":{"start":{"line":109,"column":12},"end":{"line":125,"column":13}},"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":125,"column":13}},{"start":{"line":109,"column":12},"end":{"line":125,"column":13}}],"line":109},"6":{"loc":{"start":{"line":113,"column":17},"end":{"line":125,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":17},"end":{"line":125,"column":13}},{"start":{"line":113,"column":17},"end":{"line":125,"column":13}}],"line":113},"7":{"loc":{"start":{"line":114,"column":24},"end":{"line":114,"column":49}},"type":"binary-expr","locations":[{"start":{"line":114,"column":24},"end":{"line":114,"column":32}},{"start":{"line":114,"column":36},"end":{"line":114,"column":49}}],"line":114},"8":{"loc":{"start":{"line":117,"column":21},"end":{"line":117,"column":43}},"type":"binary-expr","locations":[{"start":{"line":117,"column":21},"end":{"line":117,"column":29}},{"start":{"line":117,"column":33},"end":{"line":117,"column":43}}],"line":117},"9":{"loc":{"start":{"line":119,"column":16},"end":{"line":124,"column":17}},"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":124,"column":17}},{"start":{"line":119,"column":16},"end":{"line":124,"column":17}}],"line":119}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":61,"11":61,"12":61,"13":13,"14":61,"15":58,"16":1,"17":1,"18":57,"19":34,"20":23,"21":23,"22":23,"23":11,"24":12,"25":58,"26":3,"27":3},"f":{"0":2,"1":1},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[2,59],"4":[13,48],"5":[1,57],"6":[34,23],"7":[34,34],"8":[23,11],"9":[11,12]},"inputSourceMap":{"version":3,"file":"/Users/wavded/Projects/ogr2ogr/index_test.ts","sources":["/Users/wavded/Projects/ogr2ogr/index_test.ts"],"names":[],"mappings":"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","sourcesContent":["import test from 'blue-tape'\nimport {\n  createReadStream,\n  createWriteStream,\n  ReadStream,\n  statSync,\n  writeFileSync,\n} from 'fs'\nimport ogr2ogr from './'\n\nlet dir = __dirname + '/testdata/'\n\ntest(async (t) => {\n  interface TT {\n    file?: string\n    url?: string\n    out?: string\n    opts?: string[]\n    dest?: string\n    stream?: boolean\n    success: boolean\n  }\n  let table: TT[] = [\n    // URL tests.\n    {\n      url: 'https://gist.github.com/wavded/7376428/raw/971548233e441615a426794c766223488492ddb9/test.geojson',\n      success: true,\n    },\n    {\n      url: 'https://gist.github.com/wavded/7376428/raw/971548233e441615a426794c766223488492ddb9/test.georss',\n      success: true,\n    },\n\n    // From format conversions.\n    {file: 'sample.bad', success: false},\n    {file: 'sample.empty.zip', success: false},\n    {file: 'sample.000', success: true},\n    {file: 'sample.csv', success: true},\n    {file: 'sample.dbf', success: true},\n    {file: 'sample.dgn', success: true},\n    {file: 'sample.dxf', success: true},\n    {file: 'sample.gdb.zip', out: 'dxf', success: true},\n    {file: 'sample.geojson', success: true},\n    {file: 'sample.gml', success: true},\n    {file: 'sample.gmt', success: true},\n    {file: 'sample.gxt', success: true},\n    {file: 'sample.itf', success: true},\n    {file: 'sample.json', success: true},\n    {file: 'sample.jml', stream: true, success: true},\n    {file: 'sample.kml', success: true},\n    {file: 'sample.kmz', success: true},\n    {file: 'sample.cryllic.kml', success: true},\n    {file: 'sample.map.zip', success: true},\n    {file: 'sample.mapml', stream: true, success: true},\n    {file: 'sample.rss', success: true},\n    {file: 'sample.rti.zip', out: 'dxf', success: true},\n    {file: 'sample.shp', success: true},\n    {file: 'sample.shp.zip', success: true},\n    {file: 'sample.vdv', stream: true, success: true},\n\n    // Using custom options.\n    {\n      file: 'sample.no-shx.shp',\n      opts: ['--config', 'SHAPE_RESTORE_SHX', 'TRUE'],\n      success: true,\n    },\n    {\n      file: 'sample.geom.csv',\n      opts: ['-oo', 'GEOM_POSSIBLE_NAMES=the_geom'],\n      success: true,\n    },\n\n    // To format conversions.\n    {file: 'sample.json', success: true, out: 'csv'},\n    {file: 'sample.json', success: true, out: 'dgn'},\n    {file: 'sample.json', success: true, out: 'dxf'},\n    {file: 'sample.json', success: true, out: 'esri shapefile'},\n    {file: 'sample.json', success: true, out: 'flatgeobuf'},\n    {file: 'sample.json', success: true, out: 'geoconcept'},\n    {file: 'sample.json', success: true, out: 'geojson'},\n    {file: 'sample.json', success: true, out: 'geojsonseq'},\n    {file: 'sample.json', success: true, out: 'georss'},\n    {file: 'sample.json', success: true, out: 'gml'},\n    {file: 'sample.json', success: true, out: 'gmt'},\n    {file: 'sample.json', success: true, out: 'gpkg'},\n    {file: 'sample.json', success: true, out: 'gpx'},\n    {file: 'sample.json', success: true, out: 'jml'},\n    {file: 'sample.json', success: true, out: 'kml'},\n    {file: 'sample.json', success: true, out: 'mapml'},\n    {file: 'sample.json', success: true, out: 'mapinfo file'},\n    {file: 'sample.json', success: true, out: 'ods'},\n    {file: 'sample.json', success: true, out: 'pdf'},\n    {file: 'sample.json', success: true, out: 'vdv'},\n    {file: 'sample.json', success: true, out: 'xlsx'},\n\n    // Known supported stream conversions.\n    {file: 'sample.csv', stream: true, success: false},\n    {file: 'sample.json', stream: true, success: true},\n    {file: 'sample.rss', stream: true, success: true},\n    {file: 'sample.gml', stream: true, success: true},\n    {file: 'sample.gmt', stream: true, success: true},\n    {file: 'sample.gpx', stream: true, success: true},\n    {file: 'sample.jml', stream: true, success: true},\n    {file: 'sample.kml', stream: true, success: true},\n    {file: 'sample.mapml', stream: true, success: true},\n    {file: 'sample.vdv', stream: true, success: true},\n\n    // Custom destinations. (e.g. database)\n    {\n      file: 'sample.json',\n      success: true,\n      dest: './testdata/output/custom.geojson',\n    },\n  ]\n\n  for (let tt of table) {\n    try {\n      let input: string | ReadStream = tt.url ? tt.url : dir + tt.file\n      if (tt.stream) {\n        input = createReadStream(input)\n      }\n\n      let res = await ogr2ogr(input, {\n        format: tt.out,\n        options: tt.opts,\n        destination: tt.dest,\n      })\n\n      if (tt.dest) {\n        statSync(tt.dest)\n        t.pass()\n      } else if (!tt.out) {\n        t.equal(res.data && res.data.type, 'FeatureCollection', res.cmd)\n      } else {\n        t.ok(res.text || res.stream, res.cmd)\n        let fn = dir + 'output/r_' + tt.out + res.extname\n\n        if (res.stream) {\n          res.stream.pipe(createWriteStream(fn))\n        } else {\n          writeFileSync(fn, res.text)\n        }\n      }\n      t.ok(tt.success)\n    } catch (err) {\n      console.log(err)\n      t.notOk(tt.success)\n    }\n  }\n})\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2235792f9a7b98407699463f7c16b38f3e375c2e","contentHash":"6519594bd75d2353bc7013306f884781faa875a0de45f375e9c5951bbdbec19a"},"/Users/wavded/Projects/ogr2ogr/index.ts":{"path":"/Users/wavded/Projects/ogr2ogr/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":24},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":26}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":26}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":30}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":34}},"9":{"start":{"line":13,"column":17},"end":{"line":13,"column":72}},"10":{"start":{"line":14,"column":17},"end":{"line":14,"column":29}},"11":{"start":{"line":15,"column":18},"end":{"line":15,"column":31}},"12":{"start":{"line":16,"column":11},"end":{"line":16,"column":21}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":90}},"15":{"start":{"line":22,"column":8},"end":{"line":22,"column":42}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":42}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":50}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":34}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":36}},"20":{"start":{"line":27,"column":28},"end":{"line":27,"column":65}},"21":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"22":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"23":{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},"24":{"start":{"line":31,"column":12},"end":{"line":31,"column":37}},"25":{"start":{"line":33,"column":13},"end":{"line":38,"column":9}},"26":{"start":{"line":34,"column":12},"end":{"line":34,"column":54}},"27":{"start":{"line":37,"column":12},"end":{"line":37,"column":79}},"28":{"start":{"line":41,"column":8},"end":{"line":43,"column":37}},"29":{"start":{"line":42,"column":27},"end":{"line":42,"column":40}},"30":{"start":{"line":43,"column":28},"end":{"line":43,"column":35}},"31":{"start":{"line":46,"column":8},"end":{"line":46,"column":56}},"32":{"start":{"line":49,"column":19},"end":{"line":49,"column":21}},"33":{"start":{"line":50,"column":18},"end":{"line":50,"column":35}},"34":{"start":{"line":51,"column":8},"end":{"line":63,"column":9}},"35":{"start":{"line":55,"column":16},"end":{"line":55,"column":34}},"36":{"start":{"line":56,"column":16},"end":{"line":56,"column":22}},"37":{"start":{"line":58,"column":16},"end":{"line":58,"column":35}},"38":{"start":{"line":59,"column":16},"end":{"line":59,"column":22}},"39":{"start":{"line":61,"column":16},"end":{"line":61,"column":34}},"40":{"start":{"line":62,"column":16},"end":{"line":62,"column":22}},"41":{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},"42":{"start":{"line":65,"column":12},"end":{"line":65,"column":36}},"43":{"start":{"line":66,"column":12},"end":{"line":66,"column":24}},"44":{"start":{"line":68,"column":8},"end":{"line":68,"column":18}},"45":{"start":{"line":69,"column":8},"end":{"line":69,"column":20}},"46":{"start":{"line":72,"column":18},"end":{"line":72,"column":39}},"47":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"48":{"start":{"line":74,"column":12},"end":{"line":74,"column":44}},"49":{"start":{"line":76,"column":19},"end":{"line":76,"column":63}},"50":{"start":{"line":77,"column":8},"end":{"line":88,"column":9}},"51":{"start":{"line":79,"column":16},"end":{"line":79,"column":31}},"52":{"start":{"line":80,"column":16},"end":{"line":80,"column":29}},"53":{"start":{"line":81,"column":16},"end":{"line":81,"column":22}},"54":{"start":{"line":84,"column":16},"end":{"line":84,"column":29}},"55":{"start":{"line":85,"column":16},"end":{"line":85,"column":22}},"56":{"start":{"line":87,"column":16},"end":{"line":87,"column":28}},"57":{"start":{"line":89,"column":8},"end":{"line":89,"column":29}},"58":{"start":{"line":92,"column":22},"end":{"line":92,"column":47}},"59":{"start":{"line":93,"column":8},"end":{"line":93,"column":36}},"60":{"start":{"line":94,"column":8},"end":{"line":94,"column":43}},"61":{"start":{"line":95,"column":8},"end":{"line":95,"column":27}},"62":{"start":{"line":96,"column":8},"end":{"line":96,"column":23}},"63":{"start":{"line":100,"column":22},"end":{"line":100,"column":90}},"64":{"start":{"line":101,"column":19},"end":{"line":107,"column":9}},"65":{"start":{"line":108,"column":8},"end":{"line":109,"column":45}},"66":{"start":{"line":109,"column":12},"end":{"line":109,"column":45}},"67":{"start":{"line":110,"column":18},"end":{"line":110,"column":84}},"68":{"start":{"line":111,"column":22},"end":{"line":111,"column":76}},"69":{"start":{"line":112,"column":33},"end":{"line":120,"column":10}},"70":{"start":{"line":113,"column":23},"end":{"line":117,"column":14}},"71":{"start":{"line":114,"column":16},"end":{"line":115,"column":29}},"72":{"start":{"line":115,"column":20},"end":{"line":115,"column":29}},"73":{"start":{"line":116,"column":16},"end":{"line":116,"column":40}},"74":{"start":{"line":118,"column":12},"end":{"line":119,"column":50}},"75":{"start":{"line":119,"column":16},"end":{"line":119,"column":50}},"76":{"start":{"line":121,"column":18},"end":{"line":126,"column":9}},"77":{"start":{"line":127,"column":8},"end":{"line":134,"column":9}},"78":{"start":{"line":128,"column":12},"end":{"line":133,"column":13}},"79":{"start":{"line":129,"column":16},"end":{"line":129,"column":46}},"80":{"start":{"line":135,"column":8},"end":{"line":142,"column":9}},"81":{"start":{"line":136,"column":12},"end":{"line":141,"column":13}},"82":{"start":{"line":137,"column":16},"end":{"line":137,"column":67}},"83":{"start":{"line":140,"column":16},"end":{"line":140,"column":68}},"84":{"start":{"line":143,"column":8},"end":{"line":143,"column":19}},"85":{"start":{"line":147,"column":4},"end":{"line":147,"column":36}},"86":{"start":{"line":149,"column":0},"end":{"line":149,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":34},"end":{"line":39,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":13},"end":{"line":44,"column":5}},"line":40},"3":{"name":"(anonymous_3)","decl":{"start":{"line":42,"column":18},"end":{"line":42,"column":19}},"loc":{"start":{"line":42,"column":27},"end":{"line":42,"column":40}},"line":42},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":19},"end":{"line":43,"column":20}},"loc":{"start":{"line":43,"column":28},"end":{"line":43,"column":35}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":34},"end":{"line":47,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":20},"end":{"line":70,"column":5}},"line":48},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":21},"end":{"line":90,"column":5}},"line":71},"8":{"name":"(anonymous_8)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":23},"end":{"line":97,"column":5}},"line":91},"9":{"name":"(anonymous_9)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":16},"end":{"line":144,"column":5}},"line":98},"10":{"name":"(anonymous_10)","decl":{"start":{"line":112,"column":51},"end":{"line":112,"column":52}},"loc":{"start":{"line":112,"column":65},"end":{"line":120,"column":9}},"line":112},"11":{"name":"(anonymous_11)","decl":{"start":{"line":113,"column":81},"end":{"line":113,"column":82}},"loc":{"start":{"line":113,"column":106},"end":{"line":117,"column":13}},"line":113},"12":{"name":"ogr2ogr","decl":{"start":{"line":146,"column":9},"end":{"line":146,"column":16}},"loc":{"start":{"line":146,"column":30},"end":{"line":148,"column":1}},"line":146}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":23},"end":{"line":18,"column":32}},"type":"default-arg","locations":[{"start":{"line":18,"column":30},"end":{"line":18,"column":32}}],"line":18},"4":{"loc":{"start":{"line":21,"column":28},"end":{"line":21,"column":89}},"type":"cond-expr","locations":[{"start":{"line":21,"column":75},"end":{"line":21,"column":77}},{"start":{"line":21,"column":80},"end":{"line":21,"column":89}}],"line":21},"5":{"loc":{"start":{"line":21,"column":28},"end":{"line":21,"column":72}},"type":"binary-expr","locations":[{"start":{"line":21,"column":28},"end":{"line":21,"column":55}},{"start":{"line":21,"column":59},"end":{"line":21,"column":72}}],"line":21},"6":{"loc":{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},{"start":{"line":30,"column":8},"end":{"line":38,"column":9}}],"line":30},"7":{"loc":{"start":{"line":33,"column":13},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":13},"end":{"line":38,"column":9}},{"start":{"line":33,"column":13},"end":{"line":38,"column":9}}],"line":33},"8":{"loc":{"start":{"line":51,"column":8},"end":{"line":63,"column":9}},"type":"switch","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":24}},{"start":{"line":53,"column":12},"end":{"line":53,"column":24}},{"start":{"line":54,"column":12},"end":{"line":56,"column":22}},{"start":{"line":57,"column":12},"end":{"line":59,"column":22}},{"start":{"line":60,"column":12},"end":{"line":62,"column":22}}],"line":51},"9":{"loc":{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},{"start":{"line":64,"column":8},"end":{"line":67,"column":9}}],"line":64},"10":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{"line":73,"column":8},"end":{"line":75,"column":9}}],"line":73},"11":{"loc":{"start":{"line":77,"column":8},"end":{"line":88,"column":9}},"type":"switch","locations":[{"start":{"line":78,"column":12},"end":{"line":81,"column":22}},{"start":{"line":82,"column":12},"end":{"line":82,"column":32}},{"start":{"line":83,"column":12},"end":{"line":85,"column":22}},{"start":{"line":86,"column":12},"end":{"line":87,"column":28}}],"line":77},"12":{"loc":{"start":{"line":100,"column":22},"end":{"line":100,"column":90}},"type":"cond-expr","locations":[{"start":{"line":100,"column":76},"end":{"line":100,"column":78}},{"start":{"line":100,"column":81},"end":{"line":100,"column":90}}],"line":100},"13":{"loc":{"start":{"line":100,"column":22},"end":{"line":100,"column":73}},"type":"binary-expr","locations":[{"start":{"line":100,"column":22},"end":{"line":100,"column":56}},{"start":{"line":100,"column":60},"end":{"line":100,"column":73}}],"line":100},"14":{"loc":{"start":{"line":105,"column":12},"end":{"line":105,"column":53}},"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":34}},{"start":{"line":105,"column":38},"end":{"line":105,"column":53}}],"line":105},"15":{"loc":{"start":{"line":108,"column":8},"end":{"line":109,"column":45}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":109,"column":45}},{"start":{"line":108,"column":8},"end":{"line":109,"column":45}}],"line":108},"16":{"loc":{"start":{"line":110,"column":18},"end":{"line":110,"column":84}},"type":"cond-expr","locations":[{"start":{"line":110,"column":35},"end":{"line":110,"column":72}},{"start":{"line":110,"column":75},"end":{"line":110,"column":84}}],"line":110},"17":{"loc":{"start":{"line":111,"column":22},"end":{"line":111,"column":76}},"type":"cond-expr","locations":[{"start":{"line":111,"column":70},"end":{"line":111,"column":72}},{"start":{"line":111,"column":75},"end":{"line":111,"column":76}}],"line":111},"18":{"loc":{"start":{"line":111,"column":22},"end":{"line":111,"column":67}},"type":"binary-expr","locations":[{"start":{"line":111,"column":22},"end":{"line":111,"column":50}},{"start":{"line":111,"column":54},"end":{"line":111,"column":67}}],"line":111},"19":{"loc":{"start":{"line":114,"column":16},"end":{"line":115,"column":29}},"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":115,"column":29}},{"start":{"line":114,"column":16},"end":{"line":115,"column":29}}],"line":114},"20":{"loc":{"start":{"line":118,"column":12},"end":{"line":119,"column":50}},"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":119,"column":50}},{"start":{"line":118,"column":12},"end":{"line":119,"column":50}}],"line":118},"21":{"loc":{"start":{"line":118,"column":16},"end":{"line":118,"column":46}},"type":"binary-expr","locations":[{"start":{"line":118,"column":16},"end":{"line":118,"column":32}},{"start":{"line":118,"column":36},"end":{"line":118,"column":46}}],"line":118},"22":{"loc":{"start":{"line":127,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":134,"column":9}},{"start":{"line":127,"column":8},"end":{"line":134,"column":9}}],"line":127},"23":{"loc":{"start":{"line":135,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":142,"column":9}},{"start":{"line":135,"column":8},"end":{"line":142,"column":9}}],"line":135},"24":{"loc":{"start":{"line":135,"column":12},"end":{"line":135,"column":68}},"type":"binary-expr","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":35}},{"start":{"line":135,"column":39},"end":{"line":135,"column":68}}],"line":135},"25":{"loc":{"start":{"line":136,"column":12},"end":{"line":141,"column":13}},"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":141,"column":13}},{"start":{"line":136,"column":12},"end":{"line":141,"column":13}}],"line":136}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":61,"14":61,"15":61,"16":61,"17":61,"18":61,"19":61,"20":61,"21":61,"22":61,"23":61,"24":13,"25":48,"26":48,"27":0,"28":0,"29":0,"30":0,"31":61,"32":48,"33":48,"34":48,"35":6,"36":6,"37":0,"38":0,"39":0,"40":0,"41":48,"42":2,"43":2,"44":46,"45":46,"46":61,"47":61,"48":50,"49":11,"50":11,"51":1,"52":1,"53":1,"54":2,"55":2,"56":8,"57":11,"58":2,"59":2,"60":2,"61":2,"62":2,"63":61,"64":61,"65":61,"66":2,"67":61,"68":61,"69":61,"70":61,"71":61,"72":3,"73":61,"74":61,"75":13,"76":58,"77":58,"78":36,"79":36,"80":58,"81":11,"82":2,"83":9,"84":58,"85":61,"86":1},"f":{"0":1,"1":61,"2":0,"3":0,"4":0,"5":61,"6":48,"7":61,"8":2,"9":61,"10":61,"11":61,"12":61},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[23,38],"5":[61,61],"6":[13,48],"7":[48,0],"8":[5,6,6,0,0],"9":[2,46],"10":[50,11],"11":[1,1,2,8],"12":[0,61],"13":[61,61],"14":[61,60],"15":[2,59],"16":[0,61],"17":[0,61],"18":[61,61],"19":[3,58],"20":[13,48],"21":[61,13],"22":[36,22],"23":[11,47],"24":[58,57],"25":[2,9]},"inputSourceMap":{"version":3,"file":"/Users/wavded/Projects/ogr2ogr/index.ts","sources":["/Users/wavded/Projects/ogr2ogr/index.ts"],"names":[],"mappings":"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","sourcesContent":["import archiver from 'archiver'\nimport {execFile} from 'child_process'\nimport {createReadStream} from 'fs'\nimport {tmpdir} from 'os'\nimport {extname, join} from 'path'\nimport {Readable, Stream} from 'stream'\n\ntype JSONLike = Record<string, unknown>\ntype RunOutput = {stdout: string; stderr: string}\n\ntype Input = string | JSONLike | Stream\ninterface Result {\n  cmd: string\n  text: string\n  data?: JSONLike\n  stream?: Readable\n  extname?: string\n  details: string\n}\ntype Callback = (err: Error | null, res?: Result) => void\ninterface Options {\n  command?: string\n  format?: string\n  options?: string[]\n  destination?: string\n  env?: Record<string, string>\n  timeout?: number\n}\n\n// Known /vsistdout/ support.\nconst stdoutRe = /csv|geojson|georss|gml|gmt|gpx|jml|kml|mapml|pdf|vdv/i\nconst vsiStdIn = '/vsistdin/'\nconst vsiStdOut = '/vsistdout/'\n\nlet uniq = Date.now()\n\nclass Ogr2ogr implements PromiseLike<Result> {\n  private inputStream?: Readable\n  private inputPath: string\n  private outputPath: string\n  private outputFormat: string\n  private outputExt: string\n  private customCommand?: string\n  private customOptions?: string[]\n  private customDestination?: string\n  private customEnv?: Record<string, string>\n  private timeout?: number\n\n  constructor(input: Input, opts: Options = {}) {\n    this.inputPath = vsiStdIn\n    this.outputFormat = opts.format ?? 'GeoJSON'\n    this.customCommand = opts.command\n    this.customOptions = opts.options\n    this.customDestination = opts.destination\n    this.customEnv = opts.env\n    this.timeout = opts.timeout\n\n    let {path, ext} = this.newOutputPath(this.outputFormat)\n    this.outputPath = path\n    this.outputExt = ext\n\n    if (input instanceof Readable) {\n      this.inputStream = input\n    } else if (typeof input === 'string') {\n      this.inputPath = this.newInputPath(input)\n    } else {\n      this.inputStream = Readable.from([JSON.stringify(input)])\n    }\n  }\n\n  exec(cb: Callback) {\n    this.run()\n      .then((res) => cb(null, res))\n      .catch((err) => cb(err))\n  }\n\n  then<TResult1 = Result, TResult2 = never>(\n    onfulfilled?: (value: Result) => TResult1 | PromiseLike<TResult1>,\n    onrejected?: (reason: string) => TResult2 | PromiseLike<TResult2>\n  ): PromiseLike<TResult1 | TResult2> {\n    return this.run().then(onfulfilled, onrejected)\n  }\n\n  private newInputPath(p: string): string {\n    let path = ''\n    let ext = extname(p)\n\n    switch (ext) {\n      case '.zip':\n      case '.kmz':\n      case '.shz':\n        path = '/vsizip/'\n        break\n      case '.gz':\n        path = '/vsigzip/'\n        break\n      case '.tar':\n        path = '/vsitar/'\n        break\n    }\n\n    if (/^(http|ftp)/.test(p)) {\n      path += '/vsicurl/' + p\n      return path\n    }\n\n    path += p\n    return path\n  }\n\n  private newOutputPath(f: string) {\n    let ext = '.' + f.toLowerCase()\n\n    if (stdoutRe.test(this.outputFormat)) {\n      return {path: vsiStdOut, ext}\n    }\n\n    let path = join(tmpdir(), '/ogr_' + uniq++)\n\n    switch (f.toLowerCase()) {\n      case 'esri shapefile':\n        path += '.shz'\n        ext = '.shz'\n        break\n      case 'mapinfo file':\n      case 'flatgeobuf':\n        ext = '.zip'\n        break\n      default:\n        path += ext\n    }\n\n    return {path, ext}\n  }\n\n  private createZipStream(p: string) {\n    let archive = archiver('zip')\n    archive.directory(p, false)\n    archive.on('error', console.error)\n    archive.finalize()\n    return archive\n  }\n\n  private async run() {\n    let command = this.customCommand ?? 'ogr2ogr'\n    let args = [\n      '-f',\n      this.outputFormat,\n      '-skipfailures',\n      this.customDestination || this.outputPath,\n      this.inputPath,\n    ]\n    if (this.customOptions) args.push(...this.customOptions)\n    let env = this.customEnv ? {...process.env, ...this.customEnv} : undefined\n    let timeout = this.timeout ?? 0\n\n    let {stdout, stderr} = await new Promise<RunOutput>((res, rej) => {\n      let proc = execFile(\n        command,\n        args,\n        {env, timeout},\n        (err, stdout, stderr) => {\n          if (err) rej(err)\n          res({stdout, stderr})\n        }\n      )\n      if (this.inputStream && proc.stdin) this.inputStream.pipe(proc.stdin)\n    })\n\n    let res: Result = {\n      cmd: command + args.join(' '),\n      text: stdout,\n      details: stderr,\n      extname: this.outputExt,\n    }\n\n    if (/^geojson$/i.test(this.outputFormat)) {\n      try {\n        res.data = JSON.parse(stdout)\n      } catch (err) {\n        // ignore error\n      }\n    }\n\n    if (!this.customDestination && this.outputPath !== vsiStdOut) {\n      if (this.outputExt === '.zip') {\n        res.stream = this.createZipStream(this.outputPath)\n      } else {\n        res.stream = createReadStream(this.outputPath)\n      }\n    }\n\n    return res\n  }\n}\n\nexport default function ogr2ogr(input: Input, opts?: Options): Ogr2ogr {\n  return new Ogr2ogr(input, opts)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"43ae0f106d8319c3fc1364886ecac95ebdca803e","contentHash":"08b9fad4eaf7c21afe03dd2d98587330f17579970ead57aa869bb496ac03d0d1"}}